// <auto-generated />
using System;
using JobPlsApi.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace JobPlsApi.Migrations
{
    [DbContext(typeof(JobPostContext))]
    partial class JobPostContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "6.0.5");

            modelBuilder.Entity("JobPlsApi.Models.Company", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("LinkToWebsite")
                        .HasColumnType("TEXT");

                    b.Property<string>("Location")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Company", (string)null);
                });

            modelBuilder.Entity("JobPlsApi.Models.JobApplicationPortal", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("LinkToApplication")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("JobApplicationPortal", (string)null);
                });

            modelBuilder.Entity("JobPlsApi.Models.JobDescription", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("Description")
                        .HasColumnType("TEXT");

                    b.Property<string>("JobLocation")
                        .HasColumnType("TEXT");

                    b.Property<long?>("MaxPayRange")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("MinPayRange")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("JobDescription", (string)null);
                });

            modelBuilder.Entity("JobPlsApi.Models.JobPost", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<long?>("CompanyId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("JobApplicationPortalId")
                        .HasColumnType("INTEGER");

                    b.Property<long?>("JobDescriptionId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("JobTitle")
                        .HasColumnType("TEXT");

                    b.Property<long?>("ListJobPostsId")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("JobApplicationPortalId");

                    b.HasIndex("JobDescriptionId");

                    b.HasIndex("ListJobPostsId");

                    b.ToTable("JobPost", (string)null);
                });

            modelBuilder.Entity("JobPlsApi.Models.ListJobPosts", b =>
                {
                    b.Property<long?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.ToTable("ListJobPosts", (string)null);
                });

            modelBuilder.Entity("JobPlsApi.Models.JobPost", b =>
                {
                    b.HasOne("JobPlsApi.Models.Company", "Company")
                        .WithMany()
                        .HasForeignKey("CompanyId");

                    b.HasOne("JobPlsApi.Models.JobApplicationPortal", "JobApplicationPortal")
                        .WithMany()
                        .HasForeignKey("JobApplicationPortalId");

                    b.HasOne("JobPlsApi.Models.JobDescription", "JobDescription")
                        .WithMany()
                        .HasForeignKey("JobDescriptionId");

                    b.HasOne("JobPlsApi.Models.ListJobPosts", null)
                        .WithMany("JobPosts")
                        .HasForeignKey("ListJobPostsId");

                    b.Navigation("Company");

                    b.Navigation("JobApplicationPortal");

                    b.Navigation("JobDescription");
                });

            modelBuilder.Entity("JobPlsApi.Models.ListJobPosts", b =>
                {
                    b.Navigation("JobPosts");
                });
#pragma warning restore 612, 618
        }
    }
}
